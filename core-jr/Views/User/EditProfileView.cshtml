@model AppUser

	<!-- PAGE-HEADER -->
		<div class="page-header">
			<div>
				<h1 class="page-title">Editar Perfil</h1>
				<ol class="breadcrumb">
					<li class="breadcrumb-item"><a href="javascript:void(0);">Pagina</a></li>
					<li class="breadcrumb-item active" aria-current="page">Editar Perfil</li>
				</ol>
			</div>		
		</div>
	<!-- PAGE-HEADER END -->

	<!-- ROW-1 OPEN -->
	<div class="row">
		<div class="col-xl-4 col-md-12 col-sm-12">
			<div class="card">
				<div class="card-header">
					<div class="card-title">Cambiar contraseña</div>
				</div>
				<form id="formChangePassword">			
					<div class="card-body">					
						<input type="hidden" name="Id" value="@Model.Id"/>
						<div class="form-group">
							<label class="form-label">Nueva constraseña</label>
							<input type="password" class="form-control" name="Password">
						</div>
						<div class="form-group">
							<label class="form-label">Confirmar contraseña</label>
							<input type="password" class="form-control" name="ConfirmPassword">
						</div>
					</div>
					<div class="card-footer text-end">
							<button class="btn btn-primary-light" type="button" onclick="submitFormChangePassword()" style="width:100%;">
								<span id="btnUpdateProfileText">Actualizar</span>	
								@*	<div class="spinner-border text-white" id="animationRegister"  style="display:none;" role="status">
										<span class="sr-only"></span>
									</div>*@
							</button>		
					</div>
			    </form>
			</div>
		
		</div>
		<div class="col-xl-8 col-md-12 col-sm-12">
			<div class="card">
				<div class="card-header">
					<h3 class="card-title">Editar Perfil</h3>
				</div>
				<div class="card-body">		
						<label>Fecha de registro: @Model.RegistrationDate.ToShortDateString()</label>
					<div class="card-body">					
						<form id="formUpdateProfile">		
							<input type="hidden" name="Id" value="@Model.Id" />
							<div class="wrap-input100" >			
								<input class="input100" asp-for="Name"  name="Name" placeholder="Nombre"/>				
								<span class="focus-input100"></span>
								<span class="symbol-input100">
									<i class="mdi mdi-account" aria-hidden="true"></i>
								</span>
							</div>
							<div class="wrap-input100">			
								<input class="input100" asp-for="FirstName"  name="FirstName" placeholder="Apellido paterno"/>							
								<span class="focus-input100"></span>
								<span class="symbol-input100">
									@*<i class="mdi mdi-account" aria-hidden="true"></i>*@
								</span>
							</div>
							<div class="wrap-input100" >		
								<input class="input100" asp-for="LastName"  name="LastName" placeholder="Apellido materno"/>							
								<span class="focus-input100"></span>
								<span class="symbol-input100">
								@*	<i class="mdi mdi-account" aria-hidden="true"></i>*@
								</span>
							</div>
							<div class="wrap-input100">				
								<input class="input100" asp-for="Email"  name="Email" placeholder="Email"/>								
								<span class="focus-input100"></span>
								<span class="symbol-input100">
									<i class="zmdi zmdi-email" aria-hidden="true"></i>
								</span>
							</div>	
							<button class="btn btn-success-light" type="button" onclick="submitFormUpdateProfile()" style="width:100%;">
								<span id="btnUpdateProfileText">Actualizar</span>	
								@*	<div class="spinner-border text-white" id="animationRegister"  style="display:none;" role="status">
										<span class="sr-only"></span>
									</div>*@
							</button>					
						</form>
					</div>
				</div>				
			</div>
		</div>
	</div>
	<!-- ROW-1 CLOSED -->
                           
<script>
	function submitFormUpdateProfile() {

		   var data = $("#formUpdateProfile").serialize();
		   var textMessage=validateFormFieldsProfile();  

         if (textMessage.length>0) {
             Swal.fire({                 
                 icon: 'info',
                 html: `<ul>${textMessage}</ul>`
             });
        }
		else{
			$.ajax({
				type: 'POST',
				url: '@Url.Content("~/User/UpdateProfile")',
				contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
				data: data,
				success: function (data) {   				
						Swal.fire({
						icon: data.icon,
						title: data.title,
						text: data.msg,
						});							
				},
				error: function () {               
					console.log('Failed ');            
				}
			});
		}	
	}


	function validateFormFieldsProfile() {

    let form = $('#formUpdateProfile')[0];
    let formProfile = new FormData(form);

	var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;

    const name = formProfile.get("Name");
    const firsname = formProfile.get("FirstName");
	const lastname = formProfile.get("LastName");
	const email = formProfile.get("Email");

    let errors = [];
    let objectError = {};
     var textMessage = "";

    if (name == null || name.length == 0 || name.trim()=="" ) {
        objectError = {
            Label:"Nombre: ",
            Description: "El campo es requerido"
        };
        errors.push(objectError);
    }
    if (firsname == null || firsname.length == 0 || firsname.trim()=="") {
        objectError = {
            Label:"Apellido paterno: ",
            Description: "El campo es requerido"
        };
        errors.push(objectError);
    }
	 if (lastname == null || lastname.length == 0 || lastname.trim()=="") {
        objectError = {
            Label:"Apellido materno: ",
            Description: "El campo es requerido"
        };
        errors.push(objectError);
    }
	 if (email == null || email.length == 0 || email.trim()=="") {
        objectError = {
            Label:"Email: ",
            Description: "El campo es requerido"
        };
        errors.push(objectError);
    }

    if (!expr.test(email)) {
			objectError = {
			Label:"Email: ",
			Description: "El formato de email no es valido"
        };
        errors.push(objectError);
    }

     for (var i = 0; i < errors.length; i++) {
            textMessage += '<li>'+errors[i].Label + " " +errors[i].Description+'</li>';
        }

    return textMessage;
}

function submitFormChangePassword() {
			   var data = $("#formChangePassword").serialize();
		   var textMessage=validateFormChangePassword();  

         if (textMessage.length>0) {
             Swal.fire({                 
                 icon: 'info',
                 html: `<ul>${textMessage}</ul>`
             });
        }
		else{
			$.ajax({
				type: 'POST',
				url: '@Url.Content("~/User/ChangePassword")',
				contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
				data: data,
				success: function (data) {   				
						Swal.fire({
						icon: data.icon,
						title: data.title,
						text: data.msg,
						});							
				},
				error: function () {               
					console.log('Failed ');            
				}
			});
		}	
}

function validateFormChangePassword() {
 let form = $('#formChangePassword')[0];
    let formChangePass = new FormData(form);

    var regex =/^(?=.*\d)(?=.*[\u0021-\u002b\u003c-\u0040])(?=.*[A-Z])(?=.*[a-z])\S{8}/;

    const pass = formChangePass.get("Password");
    const confirmPass = formChangePass.get("ConfirmPassword");

    let errors = [];
    let objectError = {};
     var textMessage = "";

    if (pass == null || pass.length == 0 || pass.trim()=="" ) {
        objectError = {
            Label:"Contraseña: ",
            Description: "El campo es requerido"
        };
        errors.push(objectError);
    }
    if (confirmPass == null || confirmPass.length == 0 || confirmPass.trim()=="") {
        objectError = {
            Label:"Confirmar contraseña: ",
            Description: "El campo es requerido"
        };
        errors.push(objectError);
    }
	if (pass.length>1 && pass.length<8) {
		objectError = {
			Label:"Contraseña: ",
			Description: "La contraseña debe tener al menos 8 caracteres"
		};
		errors.push(objectError);
	}
	if (pass !== confirmPass) {
		objectError = {
			Label:"Contraseña: ",
			Description: "La contraseña y confirmación de contraseña no coinciden"
		};
		errors.push(objectError);
	}
	   if (!regex.test(pass)) {
			objectError = {
			Label:"Contraseña: ",
			Description: "La contraseña debe contener al menos una letra mayúscula, una letra minúscula, un caracter especial -*#$%&- y al menos un número"
        };
        errors.push(objectError);
    }

     for (var i = 0; i < errors.length; i++) {
            textMessage += '<li>'+errors[i].Label + " " +errors[i].Description+'</li>';
        }

    return textMessage;
}
</script>
